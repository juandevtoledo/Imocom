/*
 * Copyright (c) 2014 IMOCOM All Rights Reserved.
 * 
 * This software is the confidential and proprietary information of IMOCOM.
 * ("Confidential Information").
 * It may not be copied or reproduced in any manner without the express
 * written permission of IMOCOM.
 */
package com.imocom.intelcom.ws.ebs.interfaces;

import com.imocom.intelcom.ws.ebs.exceptions.ImocomWebserviceException;
import com.imocom.intelcom.ws.ebs.vo.response.ProductosResponseVO;
import com.imocom.intelcom.ws.ebs.vo.response.TipoResponseVO;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;

/**
 * <strong>AplicaciÃ³n</strong> : IMOCOM Sistema de Inteligencia comercial.
 * <br/>
 * <br/>
 * <strong>Date</strong> : Dec 1, 2014
 * <br/><br/>
 * <strong>Target</strong> :
 *
 * @author Carlos Guzman (cguzman) - PointMind S.A.S. -
 * carlos.guzman@pointmind.com
 *
 */
@WebService(targetNamespace = "http://com.imocom.intelcom.ws.ebs.interfaces/")
public interface IProductosEBS {

    /**
     * Servicio Web que consulta todo el inventario asociado en la ebs y los
     * filtros por los parametros enviados
     *
     * @param tipoProducto No requerido
     * @param marca No requerido
     * @param modelo No requerido
     * @param descripcion No requerido
     * @param cotizable define si un elemento se puede cotizar de forma automatica (1=si es cotizable, vacio si no)
     * @param organizationId
     * @param subinventario
     * @param linea
     * @param catalogo
     * @return
     * @throws ImocomWebserviceException
     */
    @WebMethod(operationName = "consultaInventario")
    public ProductosResponseVO consultaInventario(@WebParam(name = "tipoProducto") String tipoProducto,
            @WebParam(name = "marca") String marca,
            @WebParam(name = "modelo") String modelo,
            @WebParam(name = "descripcion") String descripcion,
            @WebParam(name = "cotizable") String cotizable,
            @WebParam(name = "organizationId") String organizationId,
            @WebParam(name = "subinventario") String subinventario,
            @WebParam(name = "linea") String linea,
            @WebParam(name = "catalogo") String catalogo
            ) throws ImocomWebserviceException;

    /**
     * Servicio web que consultas los productos asociados a una oportunidad de
     * venta     
     * @param idOportunidad Requerido : Identificador de la oportunidad
     * @return
     * @throws ImocomWebserviceException
     */
    @WebMethod(operationName = "consultarProducto")
    public ProductosResponseVO consultarProducto(@WebParam(name = "idOportunidad") String idOportunidad, @WebParam(name = "cotizable") String cotizable
    ) throws ImocomWebserviceException;
    
    /**
     * Método que retorna el detalle de un producto
     * @param idProducto
     * @return
     * @throws ImocomWebserviceException 
     */
    @WebMethod(operationName = "detalleProducto")
    public ProductosResponseVO detalleProducto(@WebParam(name = "idProducto") String idProducto
    ) throws ImocomWebserviceException;
    
    /**
     * Método que retorna el detalle de los productos vendidos a un cliente
     * @param nitClientes
     * @return
     * @throws ImocomWebserviceException 
     */
    @WebMethod(operationName = "productosVendidos")
    public ProductosResponseVO productosVendidos(@WebParam(name = "nitClientes") String nitClientes
    ) throws ImocomWebserviceException;
    
    /**
     * Método que retorna el detalle de los productos que no se la han facturado a un cliente
     * @param nitClientes
     * @return
     * @throws ImocomWebserviceException 
     */
    @WebMethod(operationName = "productosPendientesPorFacturar")
    public ProductosResponseVO productosPendientesPorFacturar(@WebParam(name = "nitClientes") String nitClientes
    ) throws ImocomWebserviceException;
    
    /**
     * 
     * @param linea
     * @return
     * @throws ImocomWebserviceException 
     */
    @WebMethod(operationName = "getMarcasPorLinea")
    public TipoResponseVO getMarcasPorLinea(@WebParam(name = "linea") String linea
    ) throws ImocomWebserviceException;
    /**
     * 
     * @param idMarca
     * @return
     * @throws ImocomWebserviceException 
     */
    @WebMethod(operationName = "getModelPorMarca")
    public TipoResponseVO getModelPorMarca(@WebParam(name = "idMarca") String idMarca,
    @WebParam(name = "linea") String linea
    ) throws ImocomWebserviceException;
    
    @WebMethod(operationName = "consultaInventarioSinBodegas")
    public ProductosResponseVO consultaInventarioSinBodegas(@WebParam(name = "tipoProducto") String tipoProducto,
            @WebParam(name = "marca") String marca,
            @WebParam(name = "modelo") String modelo,
            @WebParam(name = "descripcion") String descripcion        
           
   ) throws ImocomWebserviceException;

}

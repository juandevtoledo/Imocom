<?xml version = '1.0' encoding = 'UTF-8'?>
<!--Generated by Oracle SOA Modeler version 11.1.1.7.0 at [2/12/15 6:35 PM].-->
<Mediator name="ConsultaProductosEBSMediator" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.oracle.com/sca/1.0/mediator"
          wsdlTargetNamespace="http://com.imocom.intelcom.ws.ebs.interfaces/">
  <operation name="consultaInventario" deliveryPolicy="AllOrNothing"
             priority="4" validateSchema="false">
    <switch>
      <case executionType="direct"
            name="ConsultaInventarioFiltrosEBSAdapter.ConsultaInventarioFiltrosEBSAdapter">
        <action>
          <transform>
            <part name="$out.ConsultaInventarioFiltrosEBSAdapterInput_msg"
                  function="xslt(xsl/consultaInventario_To_ConsultaInventarioFiltrosEBSAdapterInput.xsl, $in.parameters)"/>
          </transform>
          <assign>
            <copy target="$out.property.tracking.compositeInstanceTitle"
                  expression="med:setCompositeInstanceTitle(concat('Consulta Inventario tipo:',$in.parameters/tns:consultaInventario/tipoProducto,' marca: ',$in.parameters/tns:consultaInventario/marca,' modelo: ',$in.parameters/tns:consultaInventario/modelo,' descripcion: ', $in.parameters/tns:consultaInventario/descripcion))"
                  xmlns:tns="http://com.imocom.intelcom.ws.ebs.interfaces/"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath"/>
          </assign>
          <invoke reference="ConsultaInventarioFiltrosEBSAdapter"
                  operation="ConsultaInventarioFiltrosEBSAdapter">
            <onReply>
              <transform>
                <part name="$out.parameters"
                      function="xslt(xsl/ConsultaInventarioFiltrosEBSAdapterOutputCollection_To_consultaInventarioResponse_3.xsl, $in.ConsultaInventarioFiltrosEBSAdapterOutputCollection)"/>
              </transform>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
    </switch>
  </operation>
  <operation name="consultarProducto" deliveryPolicy="AllOrNothing" priority="4"
             validateSchema="false">
    <switch>
      <case executionType="direct"
            name="ConsultaProductosByLeadIDEBSAdapter.ConsultaProductosByLeadIDEBSAdapter">
        <action>
          <transform>
            <part name="$out.ConsultaProductosByLeadIDEBSAdapterInput_msg"
                  function="xslt(xsl/consultarProducto_To_ConsultaProductosByLeadIDEBSAdapterInput_2.xsl, $in.parameters)"/>
          </transform>
          <assign>
            <copy target="$out.property.tracking.compositeInstanceTitle"
                  expression="med:setCompositeInstanceTitle(concat('Consulta Productos Opp: ',$in.parameters/tns:consultarProducto/idOportunidad))"
                  xmlns:tns="http://com.imocom.intelcom.ws.ebs.interfaces/"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath"/>
          </assign>
          <invoke reference="ConsultaProductosByLeadIDEBSAdapter"
                  operation="ConsultaProductosByLeadIDEBSAdapter">
            <onReply>
              <transform>
                <part name="$out.parameters"
                      function="xslt(xsl/ConsultaProductosByLeadIDEBSAdapterOutputCollection_To_consultarProductoResponse_2.xsl, $in.ConsultaProductosByLeadIDEBSAdapterOutputCollection)"/>
              </transform>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
    </switch>
  </operation>
  <operation name="detalleProducto" deliveryPolicy="AllOrNothing" priority="4"
             validateSchema="false">
    <switch>
      <case executionType="direct" name="DetalleProducto.DetalleProducto">
        <action>
          <transform>
            <part name="$out.DetalleProductoInput_msg"
                  function="xslt(xsl/detalleProducto_To_DetalleProductoInput.xsl, $in.parameters)"/>
          </transform>
          <assign>
            <copy target="$out.property.tracking.compositeInstanceTitle"
                  expression="med:setCompositeInstanceTitle(concat('Detalle Producto: ',$in.parameters/tns:detalleProducto/idProducto))"
                  xmlns:tns="http://com.imocom.intelcom.ws.ebs.interfaces/"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath"/>
          </assign>
          <invoke reference="DetalleProducto" operation="DetalleProducto">
            <onReply>
              <transform>
                <part name="$out.parameters"
                      function="xslt(xsl/DetalleProductoOutputCollection_To_detalleProductoResponse.xsl, $in.DetalleProductoOutputCollection)"/>
              </transform>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
    </switch>
  </operation>
  <operation name="productosVendidos" deliveryPolicy="AllOrNothing" priority="4"
             validateSchema="false">
    <switch>
      <case executionType="direct"
            name="ConsultaProductosVendidosEBSAdapter.ConsultaProductosVendidosEBSAdapter">
        <action>
          <transform>
            <part name="$out.ConsultaProductosVendidosEBSAdapterInput_msg"
                  function="xslt(xsl/productosVendidos_To_ConsultaProductosVendidosEBSAdapterInput.xsl, $in.parameters)"/>
          </transform>
		   <assign>
            <copy target="$out.property.tracking.compositeInstanceTitle"
                  expression="med:setCompositeInstanceTitle('productosVendidos: ')"
                  xmlns:tns="http://com.imocom.intelcom.ws.ebs.interfaces/"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath"/>
          </assign>
          <invoke reference="ConsultaProductosVendidosEBSAdapter"
                  operation="ConsultaProductosVendidosEBSAdapter">
            <onReply>
              <transform>
                <part name="$out.parameters"
                      function="xslt(xsl/ConsultaProductosVendidosEBSAdapterOutputCollection_To_productosVendidosResponse.xsl, $in.ConsultaProductosVendidosEBSAdapterOutputCollection)"/>
              </transform>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
    </switch>
  </operation>
  <operation name="productosPendientesPorFacturar" deliveryPolicy="AllOrNothing"
             priority="4" validateSchema="false">
    <switch>
      <case executionType="direct"
            name="ConsultaProductosPendietesPorFacturarEBSAdapter.ConsultaProductosPendietesPorFacturarEBSAdapter">
        <action>
          <transform>
            <part name="$out.ConsultaProductosPendietesPorFacturarEBSAdapterInput_msg"
                  function="xslt(xsl/productosPendientesPorFacturar_To_ConsultaProductosPendietesPorFacturarEBSAdapterInput.xsl, $in.parameters)"/>
          </transform>
		  <assign>
		  <copy target="$out.property.tracking.compositeInstanceTitle"
                  expression="med:setCompositeInstanceTitle('productosPendientesPorFacturar ')"
                  xmlns:tns="http://com.imocom.intelcom.ws.ebs.interfaces/"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath"/>
          </assign>
          <invoke reference="ConsultaProductosPendietesPorFacturarEBSAdapter"
                  operation="ConsultaProductosPendietesPorFacturarEBSAdapter">
            <onReply>
              <transform>
                <part name="$out.parameters"
                      function="xslt(xsl/ConsultaProductosPendietesPorFacturarEBSAdapterOutputCollection_To_productosPendientesPorFacturarResponse.xsl, $in.ConsultaProductosPendietesPorFacturarEBSAdapterOutputCollection)"/>
              </transform>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
    </switch>
  </operation>
  <operation name="getMarcasPorLinea" deliveryPolicy="AllOrNothing" priority="4"
             validateSchema="false">
    <switch>
      <case executionType="direct"
            name="consultarMarcasPorLinea.consultarMarcasPorLinea_3">
        <action>
          <transform>
            <part name="$out.consultarMarcasPorLineaInput_msg"
                  function="xslt(xsl/getMarcasPorLinea_To_consultarMarcasPorLineaInput.xsl, $in.parameters)"/>
          </transform>
          <assign>
			<copy target="$out.property.tracking.compositeInstanceTitle"
                  expression="med:setCompositeInstanceTitle('getMarcasPorLinea ')"
                  xmlns:tns="http://com.imocom.intelcom.ws.ebs.interfaces/"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath"/>
          </assign>
          <invoke reference="consultarMarcasPorLinea"
                  operation="consultarMarcasPorLinea">
            <onReply>
              <transform>
                <part name="$out.parameters"
                      function="xslt(xsl/consultarMarcasPorLineaOutputCollection_To_getMarcasPorLineaResponse.xsl, $in.consultarMarcasPorLineaOutputCollection)"/>
              </transform>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
      <!--<case executionType="direct"
            name="consultarMarcasPorLinea.consultarMarcasPorLinea_2">
        <action>
          <invoke reference="consultarMarcasPorLinea"
                  operation="consultarMarcasPorLinea">
            <onReply>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>-->
    </switch>
  </operation>
  <operation name="getModelPorMarca" deliveryPolicy="AllOrNothing" priority="4"
             validateSchema="false">
    <switch>
      <case executionType="direct"
            name="consultarModelosPorMarca.consultarModelosPorMarca">
        <action>
          <transform>
            <part name="$out.consultarModelosPorMarcaInput_msg"
                  function="xslt(xsl/getModelPorMarca_To_consultarModelosPorMarcaInput.xsl, $in.parameters)"/>
          </transform>
		   <assign>
			<copy target="$out.property.tracking.compositeInstanceTitle"
                  expression="med:setCompositeInstanceTitle('getModelPorMarca ')"
                  xmlns:tns="http://com.imocom.intelcom.ws.ebs.interfaces/"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath"/>
          </assign>
          <invoke reference="consultarModelosPorMarca"
                  operation="consultarModelosPorMarca">
            <onReply>
              <transform>
                <part name="$out.parameters"
                      function="xslt(xsl/consultarModelosPorMarcaOutputCollection_To_getModelPorMarcaResponse.xsl, $in.consultarModelosPorMarcaOutputCollection)"/>
              </transform>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
     
    </switch>
  </operation>
  <operation name="consultaInventarioSinBodegas" deliveryPolicy="AllOrNothing"
             priority="4" validateSchema="false">
	<switch/>
  </operation>  
  <operation name="productoCotizableAutomaticamente"
             deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
    <switch>
      <case executionType="direct"
            name="ProductoCotizableAutomaticamente.ProductoCotizableAutomaticamente">
        <action>
          <transform>
            <part name="$out.ProductoCotizableAutomaticamenteInput_msg"
                  function="xslt(xsl/productoCotizableAutomaticamente_To_ProductoCotizableAutomaticamenteInput_3.xsl, $in.parameters)"/>
          </transform>
          <invoke reference="ProductoCotizableAutomaticamente"
                  operation="ProductoCotizableAutomaticamente">
            <onReply>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
    </switch>
  </operation>
</Mediator>
